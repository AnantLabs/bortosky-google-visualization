///////////////////////////////////////////////////////////
//  GoogleDataColumn.cs
//  Implementation of the Class GoogleDataColumn
//  Generated by Enterprise Architect
//  Created on:      12-Feb-2009 5:20:03 PM
//  Original author: Gary
// 
//  Copyright (c) 2009 Gary Bortosky. All rights reserved. 
// 
//  This library is free software; you can redistribute it and/or modify it
//  under the terms of the New BSD License, a copy of which should have
//  been delivered along with this distribution.
// 
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
//  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
//  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
//  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
//  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
//  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
//  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
///////////////////////////////////////////////////////////




using System.Data;
namespace Bortosky.Google.Visualization.Columns {
	/// <summary>
	/// An abstract class for emitting the DataColumn value and data type
	/// </summary>
	internal abstract class GoogleDataColumn {

		protected DataColumn subjectColumn;

		/// 
		/// <param name="column"></param>
		internal GoogleDataColumn(DataColumn column){
            this.subjectColumn = column;
		}

		internal string SerializedColumnIdentifier{
			get{
                return string.Format("{{id: '{0}', label: '{1}', type: '{2}'}}", subjectColumn.ColumnName, string.IsNullOrEmpty(subjectColumn.Caption) ? subjectColumn.ColumnName : subjectColumn.Caption, this.GoogleDataType);
			}
		}

		/// <summary>
		/// Returns in overridden methods the appropriately serialized string for the data
		/// type
		/// </summary>
		/// <param name="row"></param>
		protected internal virtual string SerializedValue(DataRow row){

			return "";
		}

		protected internal virtual string GoogleDataType{
			get{
				return "";
			}
		}

		/// 
		/// <param name="column"></param>
		public static GoogleDataColumn CreateGoogleDataColumn(DataColumn column){
            switch (column.DataType.FullName)
            {
                case "System.Boolean": return new BooleanGoogleDataColumn(column);
                case "System.Byte": return new NumberGoogleDataColumn(column);
                case "System.Char": return new StringGoogleDataColumn(column);
                case "System.DateTime":
                    if (column.ExtendedProperties.ContainsKey("GoogleDateType"))
                    {
                        switch ((GoogleDateType)column.ExtendedProperties["GoogleDateType"])
                        {
                            case GoogleDateType.Date: return new DateGoogleDataColumn(column);
                            case GoogleDateType.TimeOfDay: return new TimeOfDayGoogleDataColumn(column);
                            default: return new DateTimeGoogleDataColumn(column);
                        }
                    }
                    else
                        return new DateTimeGoogleDataColumn(column);

                case "System.Decimal": return new NumberGoogleDataColumn(column);
                case "System.Double": return new NumberGoogleDataColumn(column);
                case "System.Int16": return new NumberGoogleDataColumn(column);
                case "System.Int32": return new NumberGoogleDataColumn(column);
                case "System.Int64": return new NumberGoogleDataColumn(column);
                case "System.SByte": return new NumberGoogleDataColumn(column);
                case "System.Single": return new NumberGoogleDataColumn(column);
                case "System.String": return new StringGoogleDataColumn(column);
                case "System.TimeSpan": return new StringGoogleDataColumn(column);
                case "System.UInt16": return new NumberGoogleDataColumn(column);
                case "System.UInt32": return new NumberGoogleDataColumn(column);
                case "System.UInt64": return new NumberGoogleDataColumn(column);
                default: return new StringGoogleDataColumn(column);
            }
        }

	}//end GoogleDataColumn

}//end namespace Columns